server.port=8081
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/two?useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#以下的配置并不是自动生成数据库，也就是说你必须先得手动把数据库创建好(只需要创建一个空的库就可以了)
spring.datasource.schema=classpath:sql/two.sql
#配置初始化模式
# always:总是会加载，也就是说项目启动一次就加载一次(只会第一次使用)
# never:永远都不会加载，无论项目启动多少次都不再去加载这个SQL文件了
# embedded:初始化内存数据库(redis)，初始化的并不是关系型数据库
spring.datasource.initialization-mode=never

mybatis.type-aliases-package=com.eight.model
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

#配置eureka
spring.application.name=system-interface-provider
#eureka集群
eureka.client.service-url.defaultZone=http://eureka01:7081/eureka,http://eureka02:7082/eureka,http://eureka03:7083/eureka,
#项目-功能-端口号
eureka.instance.instance-id=system-interface-8081

info.app.name = interface-system-provider
info.app.port = 8081
info.author.name = eight
info.company.name = 公司名


#配置通用mapper
#开启驼峰命名规则  配置完以下的配置之后，就可以直接实现映射，不需要使用@Column注解了
mybatis.configuration.map-underscore-to-camel-case=true
#配置自增主键策略（默认mysql）
mapper.identity=MYSQL
#通用mapper类型
mapper.mappers=tk.mybatis.mapper.common.Mapper
#设置insert和update中，是否判断字符串类型
# update set user where 1 = 1 <if test="username != null"> and username = #{username}</if>
# 这么一种写法就是如果传递了username你就给我更新，如果我没有传递，则你不用给我更新
# 配置了以下内容之后，只需要写update set user where user_id = #{userId}
mapper.not-empty=true
# 因为项目中会大量的使用枚举，因为枚举类型在通用mapper中不认识，也就是说在通用mapper中把枚举转换为简单的类型来进行处理
mapper.enum-as-simple-type=true

# 分页插件的配置
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=false
pagehelper.support-methods-arguments=true










































